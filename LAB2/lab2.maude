***Laboratorul 2
fmod MYNAT is
	sorts Zero NzNat Nat .
	subsort Zero NzNat < Nat .
	op 0 : -> Zero .
	op s_ : Nat -> NzNat .
	op p_ : Nat -> Nat .
	op _+_ : Nat Nat -> Nat [assoc comm prec 33] .
	op _*_ : Nat Nat -> Nat [assoc comm prec 31] .
	op _<_ : Nat Nat -> Bool .
	op _>_ : Nat Nat -> Bool .
	op _<=_ : Nat Nat -> Bool .
	op _>=_ : Nat Nat -> Bool .
	op max : Nat Nat -> Nat .
	op min : Nat Nat -> Nat .
	op par : Nat -> Bool .
	op imp : Nat -> Bool .
	op _-_ : Nat Nat -> Nat .
	op cmmdc : Nat Nat -> Nat .
	vars N M : Nat .
	eq s p N = N .
	eq p s N = N .
	
	eq 0 + M = M .
	eq s(N) + M = s(N + M) .
	
	eq p N + M = p(N + M) .
	
	eq 0 * M = 0 .
	eq s(N) * M = (N * M) + M .
	
	*** <
	eq s N < s M = N < M .
	eq 0 < s N = true . 
	eq N < 0 = false .
    
     *** <=
    eq N <= M = (N < M) or (N == M) .
    
    *** >
    eq N > M = not(N <= M) .
    
    *** >=
    eq N >= M = not(N < M) .
    
    
    *** MAXIM
    ceq max(N, M) = M if N <= M .
    ceq max(N, M) = N if N > M .
    
    *** MINIM
    ceq min(N, M) = N if M >= N .
    ceq min(N, M) = M if M < N .
    
    *** PAR
    eq par(0) = true .
    eq par (s s N) = par (N) .
    eq par (s N) = false .
    
    *** IMPAR
    eq imp(N) = not par(N) .
    
    *** Scadere
    eq N - 0 = N .
	eq N - s M = p(N - M) .
	eq N - p M = s(N - M) .
	
    *** CMMDC
    eq cmmdc(N, M) = if N == M then N
    					else if N > M then cmmdc(N - M, M)
    						  else cmmdc(N, M - N) fi fi .
    
endfm