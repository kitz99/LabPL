*** liste de perechi cu module parametrizare

fmod PAIR{X :: TRIV, Y :: TRIV} is
	sort Pair{X, Y} .
	op [_,_] : X$Elt Y$Elt -> Pair{X, Y} .
	op first : Pair{X, Y} -> X$Elt .
	op second : Pair{X, Y} -> Y$Elt .
	var A : X$Elt .
	var B : Y$Elt .
	eq first([A,B]) = A .
	eq second([A, B]) = B .
endfm

view Int from TRIV to INT is
	sort Elt to Int .
endv 

fmod PAIR-INT is
	protecting PAIR{Int, Int} .
endfm

fmod LIST{X :: TRIV} is
	sort List{X} .
	subsort X$Elt < List{X} .
	op nil : -> List{X} .
	op _ _ : List{X} List{X} -> List{X} [assoc id: nil] .

endfm

view ToPair from TRIV to PAIR-INT is
	sort Elt to Pair{Int, Int} .
endv

fmod LIST-INT is
	protecting LIST{Int} .
endfm

fmod LIST-PAIR is
	protecting LIST{ToPair} .
	protecting LIST{Int} .
	op @first : List{ToPair} -> List{Int} .
	op @second : List{ToPair} -> List{Int} .
	var P : Pair{Int,Int} .
	var L : List{ToPair} .
	eq @first(nil) = nil .
	eq @first(P L) = first(P) @first(L) .
	
	eq @second(nil) = nil .
	eq @second(P L) = second(P) @second(L) .
endfm

